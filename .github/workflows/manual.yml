name: Register flows - Nic

on:
  workflow_dispatch:
    inputs:
      pattern:
        description: "Flow Name Pattern? (defaults to all)"
        required: false
        default: ".*"
  # schedule:
  #   - cron: "0 01 * * *"

jobs:
  create-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: echo "::set-output name=matrix::$(find projects/ -maxdepth 2 -mindepth 2 | grep "${{ github.event.inputs.pattern }}" | jq -Rsc '. / "\n" - [""]')"
  register-flows:
    needs: create-matrix
    runs-on: ubuntu-latest
    env:
      env: dev
    strategy:
      matrix:
        flow-folder: ${{ fromJSON(needs.create-matrix.outputs.matrix) }}
      max-parallel: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: setup python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.x'
      - name: Check python version
        run: echo $(python --version)
      - name: install prefect
        run: pip install prefect
      - name: install dependencies
        working-directory: ${{ matrix.flow-folder }}
        run: pip install -r requirements.txt
      - name: Login to Prefect Cloud
        run: printf cloud | prefect cloud login -k ${{ secrets.PREFECT_CLOUD_KEY}} -w ${{ secrets.PREFECT_WORKSPACE_ID}}      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
      
        uses: docker/build-push-action@v3
        with:
          context: " ${{ matrix.flow-folder }}"
          push: true
          tags: user/app:latest
      - name: register flows
        working-directory: ${{ matrix.flow-folder }}
        run: |
          ls
          prefect deployment build flow.py:healthcheck -n action -q prod -ib docker-container/prod --apply

